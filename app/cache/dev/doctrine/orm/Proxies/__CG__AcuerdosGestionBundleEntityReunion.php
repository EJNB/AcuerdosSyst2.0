<?php

namespace Proxies\__CG__\Acuerdos\GestionBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Reunion extends \Acuerdos\GestionBundle\Entity\Reunion implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'id', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'idReunion', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'fechaCreacion', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'fechaRealizacion', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'lugar', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'tipo', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'procedencia', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'rpReunion', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'temas', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'acta', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'acuerdos');
        }

        return array('__isInitialized__', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'id', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'idReunion', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'fechaCreacion', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'fechaRealizacion', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'lugar', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'tipo', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'procedencia', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'rpReunion', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'temas', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'acta', '' . "\0" . 'Acuerdos\\GestionBundle\\Entity\\Reunion' . "\0" . 'acuerdos');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Reunion $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaCreacion($fechaCreacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaCreacion', array($fechaCreacion));

        return parent::setFechaCreacion($fechaCreacion);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaCreacion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaCreacion', array());

        return parent::getFechaCreacion();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaRealizacion($fechaRealizacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaRealizacion', array($fechaRealizacion));

        return parent::setFechaRealizacion($fechaRealizacion);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaRealizacion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaRealizacion', array());

        return parent::getFechaRealizacion();
    }

    /**
     * {@inheritDoc}
     */
    public function setLugar($lugar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLugar', array($lugar));

        return parent::setLugar($lugar);
    }

    /**
     * {@inheritDoc}
     */
    public function getLugar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLugar', array());

        return parent::getLugar();
    }

    /**
     * {@inheritDoc}
     */
    public function setTipo($tipo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTipo', array($tipo));

        return parent::setTipo($tipo);
    }

    /**
     * {@inheritDoc}
     */
    public function getTipo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTipo', array());

        return parent::getTipo();
    }

    /**
     * {@inheritDoc}
     */
    public function setProcedencia(\Acuerdos\GestionBundle\Entity\Procedencia $procedencia = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProcedencia', array($procedencia));

        return parent::setProcedencia($procedencia);
    }

    /**
     * {@inheritDoc}
     */
    public function getProcedencia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProcedencia', array());

        return parent::getProcedencia();
    }

    /**
     * {@inheritDoc}
     */
    public function addRpReunion(\Acuerdos\GestionBundle\Entity\ReunionPersona $rpReunion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRpReunion', array($rpReunion));

        return parent::addRpReunion($rpReunion);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRpReunion(\Acuerdos\GestionBundle\Entity\ReunionPersona $rpReunion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRpReunion', array($rpReunion));

        return parent::removeRpReunion($rpReunion);
    }

    /**
     * {@inheritDoc}
     */
    public function getRpReunion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRpReunion', array());

        return parent::getRpReunion();
    }

    /**
     * {@inheritDoc}
     */
    public function addTema(\Acuerdos\GestionBundle\Entity\Tema $temas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTema', array($temas));

        return parent::addTema($temas);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTema(\Acuerdos\GestionBundle\Entity\Tema $temas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTema', array($temas));

        return parent::removeTema($temas);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemas', array());

        return parent::getTemas();
    }

    /**
     * {@inheritDoc}
     */
    public function addAcuerdo(\Acuerdos\GestionBundle\Entity\Acuerdo $acuerdos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAcuerdo', array($acuerdos));

        return parent::addAcuerdo($acuerdos);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAcuerdo(\Acuerdos\GestionBundle\Entity\Acuerdo $acuerdos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAcuerdo', array($acuerdos));

        return parent::removeAcuerdo($acuerdos);
    }

    /**
     * {@inheritDoc}
     */
    public function getAcuerdos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcuerdos', array());

        return parent::getAcuerdos();
    }

    /**
     * {@inheritDoc}
     */
    public function setActa(\Acuerdos\GestionBundle\Entity\Acta $acta = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActa', array($acta));

        return parent::setActa($acta);
    }

    /**
     * {@inheritDoc}
     */
    public function getActa()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActa', array());

        return parent::getActa();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdReunion($idReunion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdReunion', array($idReunion));

        return parent::setIdReunion($idReunion);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdReunion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdReunion', array());

        return parent::getIdReunion();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
